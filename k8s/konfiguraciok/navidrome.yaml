apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: navidrome-pvc
  namespace: hausz
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-cephfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: navidrome-deployment
  namespace: hausz
  labels:
    app: navidrome
spec:
  selector:
    matchLabels:
      octopusexport: OctopusExport
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: navidrome
        octopusexport: OctopusExport
    spec:
      terminationGracePeriodSeconds: 30
      volumes:
        - name: navidrome-volume
          persistentVolumeClaim:
            claimName: navidrome-pvc
      containers:
        - name: navidrome-container
          image: 'hausz_navidrome:latest'
          imagePullPolicy: Never
          env:
           - name: ND_SCANSCHEDULE
             value: 24h
           - name: ND_SESSIONTIMEOUT
             value: 168h
          volumeMounts:
            - name: navidrome-volume
              mountPath: /data
              subPath: ''
          resources:
            requests:
              memory: 30Mi
              cpu: 50m
          securityContext:
            privileged: true
---
apiVersion: v1
kind: Service
metadata:
  name: navidrome-service
  namespace: hausz
spec:
  selector:
    app: navidrome
  type: LoadBalancer
  loadBalancerIP: "192.168.0.65"
  ports:
  - name: navidrome-port
    port: 4533
    protocol: TCP
    targetPort: 4533
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: navidrome-ingress
  namespace: hausz
  labels:
    name: navidrome-ingress
spec:
  rules:
  - host: "navidrome.hausz.stream"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: navidrome-service
            port: 
              number: 4533